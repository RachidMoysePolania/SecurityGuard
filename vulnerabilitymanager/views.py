from django.db import models
from django.http import HttpResponse
from django.shortcuts import render
from django.views.generic.detail import DetailView
from django.views.generic.edit import CreateView, DeleteView, UpdateView
from django.views.generic.list import ListView
from django.contrib.auth.decorators import login_required
from .models import Vulnerability
from .models import Tickets
from .models import Task
from django.contrib.auth.mixins import LoginRequiredMixin
from django.contrib.auth.forms import UserCreationForm
from django.urls import reverse_lazy
from django.views import generic
from .form import AddTask

#VIEWS
class VulnListView(LoginRequiredMixin, ListView):
    login_url = '/history/login/'
    redirect_field_name = '/history/vulnerabilities'
    model = Vulnerability
    paginate_by = 50
    template_name = "vulnerabilitymanager/vulnerability_list.html"

class TicketListView(LoginRequiredMixin, ListView):
    login_url = '/history/login/'
    redirect_field_name = '/history/'
    model = Tickets
    paginate_by = 20
    template_name = "vulnerabilitymanager/ticket_list.html"

    def get_context_data(self,**kwargs):
        context = super(TicketListView,self).get_context_data(**kwargs)
        context['tickets'] = Vulnerability.objects.all()
        return context

class TaskListView(LoginRequiredMixin, ListView):
    login_url = '/history/login/'
    redirect_field_name = '/history/tasks'
    model = Task
    paginate_by = 50
    template_name = "vulnerabilitymanager/task_list.html"

class TicketDetailList(LoginRequiredMixin, DetailView):
    model = Tickets
    context_object_name = 'ticket'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context["tickets"] = Tickets.objects.all()
        return context

class VulnDetailList(LoginRequiredMixin, DetailView):
    model = Vulnerability
    context_object_name = 'vulnerability'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context["vuln"] = Vulnerability.objects.all()
        return context

class TaskDetailList(LoginRequiredMixin, DetailView):
    model = Task
    context_object_name = 'task'

#FORMS
class SignUpView(generic.CreateView):
    form_class = UserCreationForm
    success_url = reverse_lazy('login')
    template_name = "registration/signup.html"

class AddTask(LoginRequiredMixin, CreateView):
    model = Task
    form_class = AddTask
    template_name = 'vulnerabilitymanager/create_task.html'
    success_url = reverse_lazy('tasks')

class TaskDeleteView(LoginRequiredMixin, DeleteView):
    model = Task
    success_url = "/history/tasks"

class UpdateTaskView(LoginRequiredMixin, UpdateView):
    model = Task
    fields = ['UserTask', 'TicketAssigned', 'TaskDueDate', 'TaskState', 'TaskFiles']
    success_url = "/history/tasks"
    template_name = 'vulnerabilitymanager/update_task.html'